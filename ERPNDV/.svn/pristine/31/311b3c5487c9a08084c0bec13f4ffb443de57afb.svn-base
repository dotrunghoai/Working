<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAagAAABmCAMAAACp+fWCAAAABGdBTUEAALGPC/xhBQAAAMBQTFRF////
        ITSLwwAYHTGKOUeSy83dGi+JDCeGl5zAAB6E4eLrVmCeztDg6urwFSyIHDCKwQAA2Y6QwwATxR4qACOF
        2Nnl9/f5CiaGXGWf8PH1anKlABuDACCF9PT3ABaCLj6PrrHLPkqTc3qrJziMM0KQRFCWoKTDeoGvjZO5
        vb/UW2SfpKjGgIaxsrXOubzSaHCmAA2AAAB/13+B9eHiTliazVVa6sLE3qCh0GVpyDM79+vryT1D8NbW
        5rW3iI217cvMEQCAXAAADIBJREFUeF7tnWt7okgThsMSwaC0M7MCns8ajUYzu86e3nez//9fLZAy0vA8
        aJKNuWauvr8lXRDoQ1V1VTW5MhgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMhjfRrzACz2uL0Nl4cm2BF9/J
        kKNfnc2uIfPa3W6yGdVf0scTdi9fBAyv595RNqLhOEopazhr3Xsieopw7MjFOmovAoa3sB02LE7czc2H
        1uqsJVEZ2nKVTrQWAcObWE+lQynKbY3OUIFVR+RzDAIRMLyJ9sSVHuWoae1kb4cTJdI69iwUCcPbWM2w
        ytJQw+qJ/vZqeEW5GxEwvJFwh5eCjt3tlHsVK6JCe1sRMLwVZlxyRLXSkVpEIqdjD42J+q+onKH6EqJW
        iffX7uB1qXZmF/Vf4UmfnkRNuPPnEefcrYpAyi8/Q778Ku2GMnzrzCVl9R6pR7G6EZkc06yJ+uvbpy+A
        T9/+EgFDGecPlKVWck2BR6z5Gvusifrnzy8/AT59Nh78OdSlU8/AoZuiazzYape94Hc4Tj99+lvaDaVs
        z15QsUOxlIty+AMRyOFkTVT4yycZGo0v//u/CBhKWZ6zjxLsa+xtj5oioGNPKyKQ8Os3rPn+gMs0qCMC
        riVDfEVdmr97ztvwHlB4SZF72MNsv/4jI5Pjy2dp12iPBzdFHjoljue0K1JZHnbS/N0T7Mvi53kaY7Sk
        2sxEtUQg5Xes+X7+Tdo16vCWTc3b11nBVf3jREbu5Y3OxF0C5cNSHM2RCKT8gQfqT+icV9Eata+zqjTH
        EkaXuz/KhjtcktjPfAc7374Gb14l/sggG3X6C47TT1++SbtGeIsGyqmVdPsYaQbnh0lb+jsc6lO3AXYQ
        evdy5RGW4miMRSDlt0+Y36VdAwfj1USaAR50PPXIyPdMMCVaa32FExdOTa48QlMcjyKQ8vdnDNR8FTj0
        SlOlOtjx7Jboyu+L+568ko49rBDrbN0UougracnTo4GMU4RVqJBVSQAfOp6NH6eyBtqCeN3cebGHDBdb
        UZvgXrXsWXkKq4Q27HZ7Js2AEGoGdduX9u+dPvHX1G3ciAfAqeVenqY4SqLtJ/Bt9Fhl2eIKHKhYgf8g
        BF15pRz2Im7EL28PcxqNpTii1xvyLVTIZXuiBX7UH8ZEUa2VRF76t3BrovsIsYkiZm72ahN1hd3IJjc4
        OL7itM5UvmHY973KdrHY7DrCZLFYVwK/3+dBq0tC/LXGPH28tfyo05jr0YkNrmNyynP3pcDMS6lzvodX
        nFNZ0/Yq62Wn9tDtNaPIVc9EUbPXfdjvlqO6/+GDxXJRbmKi4tefw/BSpG+liIOvtChbpQpZHAcz3Mrv
        qlUcZLBr0pywTvpuIT9Uq7dDEdKw744S1XvU29522dm7TVfhCRvPSuX2pq3N+vWT7j/hlGONVZCaZN8Z
        7zTjXkrM3IH+bdcF9DKLsz1uym9dUmrYkNaY7m38CP70+QrszliONMd0cwo7xl/v5sNInYx12o5rz3cf
        GjQkzrk1EH8twOZHq35dEzM3zQqRtamS/hYCMuCQZrKoR/LDORRcoPZqF8WDhLVBkYZqTkcf5uu3W3jF
        23MRuLqG/au5EyzFoW16Kti7zCYWScEZxJ4ls2BDphnCHmueiLe9G7zg6hS7V1sh9XkBAjzPM471GkYn
        bPv4wGRbnDP9VWx1UudS2DMzAUir0HwyzSBaxiUc3amXDlOCmi4/ZlGNyNMeI2TE24iOeqRCSqL1FAf2
        Lhvj45Y4xFoWk5YE1MkUgUQZi+ndTYkWSI4bxZ6fw25s2x+ShwyJY51REyF2wDIeHSu07WXDEv6D/FZH
        daQ9ZvUSzZdWoa1fMrTdZ4vZrhLXw3aH89rdY/WxVZtbbMFFrVeHW14PL+w/LnASnXhO9LIUhx5kv8fx
        3WbGk3qJwUmr0PpkmkFsW/7MVTBx8XqJrjfbgxMejIjlTezz5e1UnSyGbITMx0+sDpokIKZFjx+R0Rwc
        DXxIJg1EtRLn/EVG7WAxgz1xUtVGK4PxsVWNBa3XB1xeC6sdmmUjZPiBn2vK2U5MSwSFOBqYTSzWh93e
        E0084W1pThgkJqrycCM/RvgKJc0JX2WPHuzxlLEftrmFEi5x73xE0pgsb0c7DUA8Q1fmFQkWNubZrTyp
        8cwmTPr+gWAOle30KOH7iWrOXAHngbr1pD3h6a/Ux/iVVS4qlkB0STwHL72k2jCXED+1HiHDaktUNU4c
        Jb2UtbnE4cBv7MEl7JLSzwR8Nsstpji8OZmaYxRlZ25SWczxXSCbUMvSE9440WsP00nqkWBhMxs/IkvX
        voYBNKyQb0oSFrDwHVUs7YhnOYVpK1ZbZV+LwKXAnrfs+jPgXcVTkQtOHOXMHPEuSWIRpyHdrDrW6cN5
        oCvwlBHxD/Tw8TN1skO0hxf20GF9FTCW2Aw9hYhYJl+r69riY6PkwwZfpVkjGxTMU4dWtJjiCMgLWy4O
        jXukrFQv1H5/PJKeyOcFmXqLkoXHMvl6/AiPNE6/1uEaLcupj+B6nRbK2pYvtDl1pvqml61nv8ePUawd
        CnGiV8UDylIcjWy/kpqKpH4GgGOzNp/EOHhSUOCxJ0EGakD6ndooLS/w/rAUx0NByaxwR+99uhOzsq8S
        YF0vyck8d6g7yaCm4BLSRsHik+hIrKaJybknB/3Fj7oUPuyR+Lm1wv4Uv4XHdERTHFovEYfDgtoMJ67c
        DTdRAVyChaK2kNRK5RzUDFiRJItVBC4Diz2j2iFcWx7vKEmaRDdzOCZX1E0peBrbZSbqPHe+TUwydQ1Y
        sTdzEt+LNZlgSGMHcFDt8ZL4RbqZw0J6Yfoz8FidPS4x36RiKZ84YoVxtAaHZlHS7PLFYLFnXARM7BlR
        4tlgK+2htMSzgA8VFDUjCfA8fnHWb4mJomWia6L59Ld7dzwSe8ZRfJ+8JUbvJZJi72HnHDoeZWVfFThQ
        RXeeZfqZ+WM2nMywd6PCnhsfmGCGFZLNphI3LnYu4UTGZxb4ZxPYJs0pGEA6UCSIuGJvXPYw7wB5bnam
        j5UtQ9zsPXD1fqxipV0jfITdQ0IHKTA8pQfvU9hAscJrlu1yd5cNILGoN/t2EXtPgLPP9hI5gAV2ATF9
        7ENH3DkPsa4sGh62jSKqjxxHykUx3582LmJIww2QF5T8qEwmP9ax8tsceKDa+OS3ywfKh0tdFU/Ps7JB
        7Eyw833FANs7Qwr78ymODFv26AWUZshH+DL9ywYHfDwbNF2qgwNy4Otz7OR+vpI+hSYN1d1lFR8r7C87
        e/Z4pueXM3NrMr4RmpqkWqkkgkQip2lVhUb4SJS3Pq9S2h3y0Orinx8kqRYHmniBpEfzOPqko59HULV1
        PUjIDAJWZPG0n222qWyQ7ygW4lbXi9XTBZ4MGZNsFPKXPimssJyyjfe7wFRwWcKbVpflyO0zqLa3nOim
        G/OQ2SSxGmvLdpuJbHfg5FRPn0w5qxH10iseDoV4IU1z6CPlj1gVrdpfepyoPropfRJWGqbT0M1c/5Rt
        yyaOiHt+pOijnZo9R/eI7fHjAVgfvrHk16t3ijxws3XxcaIpjq/Iwh8J5ufse3Oa5MReWf8O1upEtxe/
        cnFPPukoZE9xBOwUlGPtd5PlaD2Z3M2bTCaaXDR0lMKUWLbEGBI76Sd6Mu4ZkT3g90qXlJ75b5NSTQF9
        S5hUgAnal2bqQ/b0DaUc2+ZV5w01/4jzUexb53phPyJcz5lmEIo7/VGp8suZxWBftgBVpzirK7OykdJL
        q4MOrf8vo6HGmwu75U+wwHAxQlYkWNqklvWJYl1XOBqWdGVevr4v2QbADzuuyhSyHne8aq+tc7S3RiOa
        Ly9vnRLIafdc7RAjDBazrmuT6k2rCaZe/W6gmPxXkXnG27gRE8b7ce/2gR4dPJ7iEIKN26S3LxCrw8F4
        cfDwL403Vw6iee5BhbC+nM+GVnJ2XC59JsIlPZXObOok0k//q+iIC0JJXnU4tGJ74TRE6ACqPE4JNuNh
        YmEKVziWSGTwF7OpOqHAE2xHOcPrZclHN9+b+rwG2b/EXvqV9XLS2cmlz+xZ+rNdqU5i6bH8+69noHwY
        rDe7Vm0uMgdmvLovrCwmnVrxCrgxDFePu7kTlRxYc1SkrmuTauXjRimm7RHy6euT9Iu3KjO6sXRd/p/e
        gTr9m33fC0TomXLVHBZvT69o17eL29Zs0GtGrivaIEa5btS8aY5bk+p95aM0niFHMhVW94vlstYS7m6X
        y/W2Enj+hzh5BoPBYDAYDAaDwWAwGAwGg8FgMBgMBsOruLr6FwUnBp5pJ7CmAAAAAElFTkSuQmCC
</value>
  </data>
</root>