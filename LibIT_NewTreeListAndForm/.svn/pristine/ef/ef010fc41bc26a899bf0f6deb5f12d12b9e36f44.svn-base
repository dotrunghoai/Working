Imports CommonDB
Imports PublicUtility
Public Class FrmCreateForm
    Dim _db As New DBSql(PublicConst.EnumServers.NDV_SQL_ERP_NDV)
    Private Sub FrmCreateForm_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        glueModule.Properties.DataSource = _db.FillDataTable("SELECT FormID, TextVietNam
                                                                FROM Main_FormRight
                                                                WHERE ParentID = '0000000001'
                                                                OR ParentID = '0000000002'
                                                                ORDER BY Order1, Order2")
        glueModule.Properties.DisplayMember = "TextVietNam"
        glueModule.Properties.ValueMember = "FormID"
        glueModule.Properties.PopulateViewColumns()
        GridLookUpEdit1View.Columns("FormID").Width = 50
        GridLookUpEdit1View.Columns("TextVietNam").Width = 150
    End Sub

    Private Sub btnShow_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles btnShow.ItemClick
        GridControl1.DataSource = _db.FillDataTable("SELECT FormID, ParentID, AssemblyName, FormName, TextVietNam, 
                                                    TextEnglish, TextJapan, TextChina,
                                                    Order1, Order2, Order3, Order4, Order5, Order6
                                                    FROM Main_FormRight
                                                    ORDER BY Order1, Order2, Order3, Order4, Order5, Order6")
        GridControlSetFormat(GridView1, 3)
        GridView1.Columns("AssemblyName").Width = 125
        GridView1.Columns("FormName").Width = 125
        GridView1.Columns("TextVietNam").Width = 150
        GridView1.Columns("TextEnglish").Width = 150
        GridView1.Columns("TextJapan").Width = 150
        GridView1.Columns("TextChina").Width = 150
    End Sub
    Private Sub btnNew_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles btnNew.ItemClick
        If GridView1.Columns("FormID") Is Nothing Then
            ShowWarning("Invalid Module !")
            Return
        End If
        GridControlReadOnly(GridView1, False)
        GridView1.Columns("FormID").OptionsColumn.ReadOnly = True
        GridControlSetColorEdit(GridView1)
        GridView1.OptionsView.NewItemRowPosition = DevExpress.XtraGrid.Views.Grid.NewItemRowPosition.Top
    End Sub

    Private Sub btnShowDetail_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles btnShowDetail.ItemClick
        If glueModule.Text <> "" Then
            ShowChildByParentID()
        Else
            ShowWarning("Invalid Module !")
        End If
    End Sub

    Private Sub btnEdit_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles btnEdit.ItemClick
        If GridView1.Columns("FormID") Is Nothing Then
            ShowWarning("Invalid Module !")
            Return
        End If
        GridControlReadOnly(GridView1, False)
        GridView1.Columns("FormID").OptionsColumn.ReadOnly = True
        GridControlSetColorEdit(GridView1)
        GridView1.OptionsView.NewItemRowPosition = DevExpress.XtraGrid.Views.Grid.NewItemRowPosition.None
    End Sub

    Private Sub btnDelete_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles btnDelete.ItemClick
        If ShowQuestionDelete() = Windows.Forms.DialogResult.Yes Then
            For Each r As Integer In GridView1.GetSelectedRows
                _db.ExecuteNonQuery(String.Format(" DELETE Main_FormRight
                                                    WHERE FormID = '{0}'",
                                                    GridView1.GetRowCellValue(r, "FormID")))
            Next
            GridView1.DeleteSelectedRows()
        End If
    End Sub
    Private Sub GridLookUpEdit1_EditValueChanged(sender As Object, e As EventArgs) Handles glueModule.EditValueChanged
        ShowChildByParentID()
    End Sub
    Sub ShowChildByParentID()
        Dim dtAll As New DataTable
        'Loop1
        Dim dtChild1 = DataChild(glueModule.EditValue)
        dtAll.Merge(dtChild1)
        For Each r1 As DataRow In dtChild1.Rows
            'Loop2
            Dim dtChild2 = DataChild(r1("FormID"))
            dtAll.Merge(dtChild2)
            For Each r2 As DataRow In dtChild2.Rows
                'Loop3
                Dim dtChild3 = DataChild(r2("FormID"))
                dtAll.Merge(dtChild3)
                For Each r3 As DataRow In dtChild3.Rows
                    'Loop4
                    Dim dtChild4 = DataChild(r3("FormID"))
                    dtAll.Merge(dtChild4)
                    For Each r5 As DataRow In dtChild4.Rows
                        'Loop5
                        Dim dtChild5 = DataChild(r5("FormID"))
                        dtAll.Merge(dtChild5)
                        'Loop6
                        '-----------------
                    Next
                Next
            Next
        Next

        Dim dtAllView = dtAll.DefaultView
        dtAllView.Sort = "Order1, Order2, Order3, Order4, Order5, Order6"

        GridControl1.DataSource = dtAllView.ToTable
        GridControlSetFormat(GridView1, 3)
        GridView1.Columns("AssemblyName").Width = 125
        GridView1.Columns("FormName").Width = 125
        GridView1.Columns("TextVietNam").Width = 150
        GridView1.Columns("TextEnglish").Width = 150
        GridView1.Columns("TextJapan").Width = 150
        GridView1.Columns("TextChina").Width = 150
    End Sub
    Function DataChild(parentID) As DataTable
        Return _db.FillDataTable(String.Format("SELECT FormID, ParentID, AssemblyName, FormName, TextVietNam, 
                                                    TextEnglish, TextJapan, TextChina,
                                                    Order1, Order2, Order3, Order4, Order5, Order6
                                                FROM Main_FormRight
                                                WHERE ParentID = '{0}'",
                                                parentID))
    End Function

    Private Sub GridView1_CellValueChanged(sender As Object, e As DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs) Handles GridView1.CellValueChanged
        If GridView1.Editable And e.Column.ReadOnly = False Then
            If e.RowHandle < 0 Then
                If IsDBNull(GridView1.GetFocusedRowCellValue("FormID")) Then
                    Dim id = GetNewID()
                    _db.ExecuteNonQuery(
                        String.Format("INSERT INTO Main_FormRight 
                                (FormID, ModuleID, FormName, CreateUser, CreateDate)
                                VALUES ('{0}', 'TREE', 'NewForm', '{1}', GETDATE())",
                                id,
                                CurrentUser.UserID))
                    'Dim obj As New IT_TF_TreeFolder
                    'obj.ID_K = id
                    'obj.CreateUser = CurrentUser.UserID
                    'obj.CreateDate = DateTime.Now
                    '_db.Insert(obj)
                    GridView1.SetFocusedRowCellValue("FormID", id)
                End If
            End If
            Dim para(0) As SqlClient.SqlParameter
            para(0) = New SqlClient.SqlParameter("@Value", e.Value)
            _db.ExecuteNonQuery(String.Format("UPDATE Main_FormRight
                                                SET {0} = @Value
                                                WHERE FormID = '{1}'",
                                                e.Column.FieldName,
                                                GridView1.GetFocusedRowCellValue("FormID")),
                                                para)
        End If
    End Sub
    Function GetNewID() As String
        Dim valMaxID As String = _db.ExecuteScalar("SELECT ISNULL(MAX(FormID), 0)
                                                    FROM Main_FormRight
                                                    WHERE LEN(FormID) = 10
                                                    AND ISNUMERIC(FormID) = 1")
        Return (CType(valMaxID, Integer) + 1).ToString.PadLeft(10, "0")
    End Function
End Class